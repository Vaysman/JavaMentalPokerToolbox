package ru.wiseman.jmpt.key;

import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.junit.Test;
import ru.wiseman.jmpt.SchindelhauerTMCG;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.Security;
import java.util.Arrays;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class TMCGSecretKeyTest {
    @Test
    public void testSign() throws Exception {

    }

    @Test
    public void testDecrypt() throws Exception {

    }

    @Test
    public void testImportKey() throws Exception {

    }

    @Test
    public void testVerify() throws Exception {

    }

    @Test
    public void testFingerprint() throws Exception {

    }

    @Test
    public void testEncrypt() throws Exception {

    }

    @Test
    public void check_properSecretKey_returnsTrue() throws Exception {
//        TMCGPublicKey publicKey = mock(TMCGPublicKey.class);
//        TMCGSecretKey privateKey = spy(new TMCGSecretKey("Alice", "alice@gaos.org", 1024));
//        doReturn(publicKey).when(privateKey).makePublicKey(privateKey);
//        when(publicKey.check()).thenReturn(true);
//
//        boolean check = privateKey.check();
//
//        assertTrue(check);
    }

    @Test
    public void check_improperSecretKey_returnsFalse() throws Exception {
//        TMCGPublicKey publicKey = mock(TMCGPublicKey.class);
//        TMCGSecretKey privateKey = spy(new TMCGSecretKey("Alice", "alice@gaos.org", 1024));
//        doReturn(publicKey).when(privateKey).makePublicKey(privateKey);
//        when(publicKey.check()).thenReturn(false);
//
//        boolean check = privateKey.check();
//
//        assertFalse(check);
    }

    @Test
    public void generate_default_itWorks() throws Exception {
//        String p = "kfixbzwv0x6q049qvigo7nawg5gshbbz";
        String p = "pbnkyyjy1aslgtm6s2z24y0aiubyovwz";
//        String q = "o9zxivo4sbmrn9l8qgutknqz8gu9dmsb";
        String q = "ixhed4ev9y3m2kwbngpk2hzc5zqmnx7z";
        String name = "A";
        String email = "a@a.com";
        String type = "TMCG/RABIN_328_NIZK";
        String m = "ds0w2ofmucxk3jkesgn5y65q5qeeckp0nqgvc3tydsldqpc3i08jc5h5lr4625vp";
        String y = "7";
        String nizk = "nzk^16^za35de1d33mpknb9ko49u7y8pyh2gxt8e7lnz3u58du0tym8711zvnzej9ovrpl^5yl93vi9klfwkozidyaick1408pj766lufsyd89v2tydmyo3pl22leujsnjtryah^kom5l6pn65papc4kuedcz6v9sedktzpildjj2v3nbsv4n8wornice6whd4ewgmd^b2p0jt6vpquw5emg1k27kq0gnyagn8xqbp9tfwdyr91stuspxp4wx7k2v8eefp17^8cu678yrrwpqfpob6qvaxi2rkjtvbbxvbpmyt592a9fxpt3a0vtpbbivojikvmyv^7f27gkfclzs3hcqvg8gf7k4yulebb0rr81wnji3brdzz92x42utmrtkamot35t1t^7nlqwpyiq3kmwuagqfepv5t89z6n2lw8jx0omqjfzoup0ltpv273afx12jxgumsy^4uqlwfvjqvzmzl7xp7ph75tb4dp0frn8t4cekbuyqp4huptszxyoktctp90x8dpe^79281wkvkcqk8sc1ebbfr2on8fzqnj1j33isq8hp8t5ncj3djo1wt1fq3j6i5hx4^49jmvgjqzyb0rx0oq73zg7wgtbwjic3to935903cekkg3yi1pdw8j69766tacs2n^9vcljpkxmft30akiaj9tzccoaj9apdzzdr683l3sofu4yiyhdfdh65sg3efu0rt5^7um4p9aw803cijprpnm4jjmccgqbw4893vt86tmef8zeu5elhk71jgv6rl16a4t9^69b10oeagb8l8pnxnd2wwph9l0a2740p81z9h4pmpd0jnkczzwlmtw2sxfxja1nx^2lr6v27201egnptfkjvzhb1imw6703wbaia88c6to9jqpmioy26nvx8go28fgsbs^cmdhwzw2yrm3iwb6j3ex3g8aw186la0p41n9hnd75swjrf7kaulhoxb34gd3p9b1^c2avjl0l676al3m5tpxcz4ehierg2d301m4fhuj0ldqanxxinfn0p28s2fes64je^128^335withjzori9g1xt78xxthx4mq3249psssl4ihhepog52jq9ux3icy84tsdebuf^2ki6yxeenelp07pz77bctstdz5cqcvjbhkr1bxynv6hpuseleljehzk2a6u4gq7q^lwroo95xxtl0b5um2cvv6cyrvndvc5p1dny9xhapvb1rpslbt7kg6hk4diqbnsy^3owhzmsc1ezqhj72jkooc7styvc55oqij52qh90ix4sfv0br3si9thqj2834awpg^2x5j0c6mz1uoxcvf3heiei2cyfhpv692bkv74uch767pzvv0toumr460t27a9h8e^1ho0b7z1k7m6jpdovoxh6ymy4zysct7rbldin4yqnhetvfcz16koi7t3gsgo9gbf^qf9autmcipqmxlvoqnzo6do16wsr5q3tdb6tifvy12r2evefrsfhokeet6qzjh3^btesf7ydi62gl3uxonydtp73qan28hop2azyb5qvx8r3uomvg2s4gf1123saahm^1hcgomnfzbn4kyfcl6xsnjk8w365u9jyt6ggng7idzqshqzejcc2mhnpw69ytvjs^61uqq33uj1mnxvko3moh91e6swg7c5spcs12gwy3fr68e5j87gusbl27dodtxywp^2cs5sd4i5jx2tler7rhg0h3hqrpzzcl29pt4y0vsi7rullo7ycfonnuviiaudvaj^mccnijkmqmnpwxvmm0g3l3hikcohhycqo9n3i0bd819uiksdhemefqf2nt99vw9^26mguzco6mfma477m0f12w00fqq1052kcpflr7aoaya8vzd4axmbz4c9ahlrhhzv^1yxj2ephcfaxv21z3yz6rw8ovq9x100f7xqlwyllu56jhrru26tbpunaly3wz3nu^7v7kix478gk5ojmi6nh2ddu5q2jjkoju12106mlie2pmbexky7o7nzarslw4s8d^1tsejbpsafedyn35bu431v0h6n8runbolhkx6v8jmw9wui8s62zxxsg55m2jn66k^3r1qds8viwyi90b9goy8onn81fny1xoqgrrp04w8a2gqkr78smlpwpmddknvtvwg^1kssvktg4mwz5ymnos6dkohm0k4redpjurp0522xofn9nydj114031gwgqm6hyc5^2ih0ivpshwzomspu7us4l0ilr1dm1acomnh0utz4wem6hs6hkpha7ws49i8mdv9o^261w5ubnf8do65omtiyehsekumjwnfdsjr59l7auv4b8jkjtnfj9ykr0fsm0v62s^kjkovt09e8r6l85khzqf33r0ijtwbb0i87inngx6szqj12uednvzdwy0039ugyo^hxzer8szodv0tvxcmwyhigb0tqvi6mhgq2usyg8gq4mbxncix470nd292p2c416^1oiz295xmhigqo1u63cvb91k3xxbvzaigd2tmxilf8417yxxi36b3gwff4mtke9y^2je38zi6g2b5t7qwmrck9cbl56478jflq64vrfyp9q7owbzsbmhgz9ils9n6ajz^30kmdqlofmd3bdr61qp5nrlnm1vkwd35c92r44l2wo8zyktdydd17s27gpgwpliv^3hjxbz9xybmnixo28o0kdgyskemnku6z9gf0ipuj3me1o2jtvwlfewyh3cx5p69s^1i1bp182jtr2ytvo9ht89h5mrmub6gf11p5euz2670o0gjqn0qhglh4eofqru775^1c9u5rgg3e0tkv2dux4pkccfxxg3iujsllikd3nyrb5ekcdui5tuol6a8lb2c3co^2967518hjdodpmusyluvrvtyiems0fjmdetxehdmzj07i3ikg54r2b7fn0xf7u3r^2zixhjz9wzfrvvenn0yv7pe2vnfjxl4kwhvsveya3cv8jkr2kbzse350mycp76t9^3nuzt6yv5sci1hvcvmg1xzsiutr7nslsycn3dtfl5xzp0vl3k8sy230486pp3it^1m70ee6hn0rqkyn6trzjkp9z0mu3jtczle7gyra40gh0z9rvj36nnyfzg7bta4pn^1ymov1u9fdsbt0fhqbkz139nal94a98i6z8kbc1aqjigujycs7pfnt3bb9qsdc8p^ritpipsng2b4cfzvajf2dg5u057buoaa81buvlflbs96s7o4zw09ap91mdjk16s^305zqlm1bisl75l0qhpp0sfdw6uoj25ooakadjpqqocwodqbdlnk82vlfncz02ng^39kjqtuotlw6pre635194hc8gno36x4jsbf4xbulyytfzn18mheduh8hkahqm49f^ck9t4rm9dir5ulq39h4uth8l7znyelo7e8s6oyi94l338ckat127lrvwt09ju4m^1czb1s9wkjq7syzxvikqmpj5mvud49a5rh7b7yjfnuyengqck7mij344ef881pml^58biccjvb4sfbyn26bi36s2dp7lwcspq5gt3kd0018209vv5wpl60vu0tndklvpw^5f7h1yilt02675zwq49gg2o3zasdt9j3ckhjggpzj14gurasjh0593h0twx1dfq8^5fdpgxlxqaji58dkdza7kqq7m0hb9s4rjwgbtgw25npinnv1xvxgp997xh9c4qc^439tl772ddpp9b3l92iikidc0lbgu0fwnp9no3kgky7ngm309ltps01panae2z8r^10knclbucncn741kaqjdlj3or3b9qp1exyxifsr3jil79hwcqsyg6suruaaqkopd^23it6eizlg4dsbk5jlrrwnhbo39z7paygv1u7k5vcdjff4v8axdhvtat1rpar50s^3wn517yl2hnc7z0y0vl5ocrbce58v9xzxjnl3zglk4mgklmdrszsibhbobago8uu^3omzae63uuu9v5ml3na3mdmp5f7vgf45mke4066pb7ztgirvk4cfh2jb4ex86fy3^4e2okxymia1vpr41ttykqq5w0vkesn2herw1xbatbdsdkd06nerpayaltsbce6aw^2t9g9gqzkx218nktpzic3oe242ierig403t8apfabt2obdcvf78b0s9p94723omw^2f4drr44bcbel1992ouln80rgdghh8k8vzowxs4ea0wrxmkrif28ys9orq19iyvw^4hoixyp7r8i943veabbr3h6o9hn12ohus6vlxn2o1wrdr2ty87v2qvrmhy34tvlh^2rkj5vudu3kp5paxzf8jn40exhc1f6vpp5q0bbc9sv48ysq56w0id0xi6pl9l3t4^2lp3o2abdmv575eqtohdnyj9mxln1230fve6y541zj8jtmmaou2uxytyff6a65hq^20z82316fa9x3xkyke6wuw6fral25spl3smrk8msuzcjaye3yak82f18740kacpp^1jknb8pwlknhv7jp8gl7abnvlv7oj58km0pnftkfoh3ornw7gb4tbr18sa1mweam^1k8agkjiol304x32a721fhtj2ek57eo1vyys5n5gd4tkxutmjk7stq8c032xn1ye^1qf5axwh2ou2jzh68pnmm652hcqk48nwpaztyr9gkuni06mfwchfvdspam710s36^2384mqg9x1qv7k0lojvejj49b2m914xu78s4vs0x6q2uawpr9taky86jbyleaaao^4qoma714m3axx2hap4jd3fdvhg5kvae98k6781roe2wg1gjwjcgi30ia0qkes0l0^xjvahuqe7czbm2yz24fnmkd8hu802dcb9ckdtkumciw319yyixjjawtmiz8p6v9^2q21jc7ar9djdlq6xnzdio3ww564wjuniqeu2jxkgmot26tfjtvvsfzeuj28cuo5^t3hp6908xb2ocziq8qs0kefu05clly8w0tpb1tz1nszt3rhs4ltr6c2btezm733^b0rij0268y4g60rkcwxoh4ipo7era7pcw5yjwoyywcpbzdkioxsp832uzv1nm3n^6erk80brv7xl9oeyx3qeqh7mzvgokcpsjbybced0fw0oxir3xk5u8cduq61akd4a^gjagdceuzaafjgqht8w0duonhhjaioj9i5km1jhqsbuiy68448jcl286kkr5lde^2302juv19i0poyvlep5aadka1g9340rl7l8wkzmzanzqafdhyqhgzdomfif0o5jw^1bncvgla902n6pf4j3y3832zpp4r01d2vk8ny7ut5u0x6kwcempg9z34q9kn9blg^3paskvu1y8fva7la8zhkg7xqyc2u8tl9sgu41pm4f8foo6ug1xl5tl3740eumo4l^4fjw9c9ico3lsjufdyv9njgiuyen6xzrmqvsqth8ks1iloyqoowr60kpui1ef3iw^2nak4jacf6z51bcgejpcjgyy9y9ooj9ys6aotk0wcggkvatknexv2ati1f3zcflt^ik394qeibj1dtlbfvcz0tw4adgepn1echoqcnd2vic1a4d0gbkj79beqzmngyze^2ugvkjgcbbn6k4v9oip4045t8bga0wdz3u9nb48prt8m2mpovue6uqd84xye0y8x^3f2j3tnx266fucqbal8o2pvs0kgf0etuoqxxykaoxsoyu5t45wlixa09sipy1r4n^q9foaqn0255jpcjt4x67osoy6kkpito53n0wn31odj538hygtk29rtbgtm7cte5^49dbs4r68pgcrcsd3h82mwlzfab91njbodaldts8aat5pk0uwhdq1vuw7i3ireqp^6n8on4mi4eprtxff9mg195lsv4kj5aa63fiy8qrc2v98c4ovk4pdvo0k0jrxaap^2qb4vy4ekoguzbepovl1cgz414zlzdvzy1j7njag7h0ttyc42fm2cs5fn19vib8l^5l188enr6q2y9tlt9uhifa0qjwwls1wjug0mknxeet22a3ceaz38kq1ev4ruq2k8^oujoljy6ipz19nbas086jsd987b1o98eglnma0j7h8o25jq2rn259w2lryxdpkc^2naz7l199ycapze83deprftsftyzzrpaewz5t2p2e9uo2nnohi6zg0uik0jtwbt^24jfi2tqwv9jkhwcgueu7qmfbb0eu6bltwjp5a7ax9ov6r1mpwujm58git8uxg9w^4d793agh7uklq29v6mt4d5dt1ko3ntiwujqp7y9x8silwg2spi1euh3jlq7wflah^28031bh0k9127229laejn0kjk0ddj8n5c3zve6jrwbc81sgwtjlm827qz2sf5xin^2n03a75ktdzor2hi98yjjwl4iw5tn3fwkcwgmi8hgfd12bcqvlsa0e0ukrs3praz^3u0x3guau9dwzci0bw9l8nrgm5r6kqtoh5qs8y2to6o1y9g8s5h7v7xds3ia7us2^31xl8e3t890aifsq2v3ioortyekabw9a3fdnhl9bre7uxv4x13jwwwl6n6eu5k9m^vci2yoksnvl49dvq63blomi7xwgrqfx17uu3309yquvc5lu8oiuhx6sjf9nt7yq^8o6cklob1f0elw0g09bipswnow52ct7jvvym59mkrybt71pvq3qz7bufigff7xt^5x1y5uu3p48ov1uio21bto3lnuhpoq7f9qu0b5ui1qk4s21iyj2sc3ae0d58p0h^mdvaeatmtt7nqnboyf12gf85ogp7ar0j6y0qm549hr8luyd0r1k4bc0pq0yjvfw^n6cm7jnrwerd9kd4nfocdw4s33ruk4c3h86gvr0lxni1eawi9fte6lcasprlsmx^2s39xg8qrjpnk86lzf4ud7hx7k50vije0prac8018g49fqe5jh17ztuq65evs378^3lf15w2u6od6oh0t1e8724rbnswye4kx8ybvrlajzecgqudlyiurpf8wa99459hb^1ixxt55066eq0u37vmw4x6dljz8oakcsc73pvzbr277e6xrz2y45ruzl453847id^28s7yrjpmrkqy1fdzrnxw9f5prb4k5pn8qztqfpvzaznuedb9bf4ln9gduhj51j^ccq18y7z10dp7iqng0s2jd03xoop8vb14ojsvzj4l41b1l5e877on2immwgp620^2zf10poh1t5shmiftk58dnhyu9px7jpem8oft3p9fhxwys37kzkmdiqrs7vm54tg^4gfbqgu2hzp69q3g7yd1gj0in1j6u2mkft2lusbw6sxvipp6efglk7mo471cnkjm^pqpc291oc0arez2f0iy5ldb7bec9n5p5xbuz67g0qt1uyr1y2om9rtl0kvhffdv^qp4s7uc6aoz0z8ify9awnyop2ghx1fxmombvlm741i95eworm45tmkzxpi8wink^32rlxnkj1cwpogzqhpkvgoh4cyxthow05dauuzi4gjxal30j20vd55s0kqksbfpy^1oj4s1mfui8at02n5tco6zcqn0xe9u1gpz5b43xetzld4mrdqh37zwsxr7pan93r^186ecvplsjv7bnfnrfgsjmol5eahvqoax0581ml185pk4zmh99hchgkvzv6yp4by^2fe1e0xvola3856gtqvbgse6vzy4i8miwdymtcyrsbw3ggu6g9f3oelopwzrdsds^2oeoxtqqnitebosd17sjxhlzkvu1mskyhn30ibu2ixcpg937lg8frk1swpzyz1xk^4gmcxwpvd2yf8gkkzom7jpzflgdw2fhwx2392a3k0pa14qqhd7xuihsmzojzri0t^1zdayy7cf3a1uzv3ra9eyc7dayvrvdycacdr3d75ie00ngoaadxwxwj6d3tbha3k^3ar1phml4e8c0s6ahw7reqzef4iu17nv4tozckv9p1pr8fr9fs345zdzv0jsaai8^48fpx8knvf60p71o0qmek0svqh9ibequjw9t8fqz5ijrrwh7897pictord2mdyct^vnhflxktfrxw75c02p1zcuj3dufs17km4c1rsbodbg9twfi26fkl5qz4jgfggla^jz3uimcsq4sgl383hize9l59k6oklxra2bhjd90d0o1f88octr1zu9835xi5so5^4mgsg8qm5wjx0yxgbkf2jjlcrg7wbj4181xtbm0r3yox86pm8br0hngx9s42mqih^125ucwclnh9uhzu95ieq0mamwopm0f2qhky2z7ow3m9iw99tgv4yoej88dbqeoj1^248ckxy75m3wrypj3kp92yngtilcv4qw14iqzrw7zq4p5hq8xwcgra9sn4bfog1x^2c6fjsagfpzf9y2e36e2886c55bsq3huov37ac4o436jgvp2gsi4qvy49bnxlryt^4rpudqfvx5m3iekkgn94438pw4aa5wi28ivs20lpdcl07yv0i7i3g0a24xf0i16h^q92v6ff3zsatrg4y8901nm81qo790snikv07kgtnxo2a56514wsweiewh7jst9f^5agl2zcd34euzkfcc6eurunnwo1049sdi0wx81r5jetcanipyjix15mgz00xei68^1gqvr0q3ag3d343a83f1vravckm67x5secfyiiq0phsge8inarvrcahrzaxxbta2^3k5w05cijvuudyg3wjy1byu69946yt69ipncjm3z923nie4j418oyc55jwrvbqft^159adxagvxkdskdaloox4lm3iui7e1al78psckq9xkvcxkf0g1ekdrkw4qnfdo7r^1sa7eq15chiouzxygwh00jfw2e842a66mx7wyyakmzhhtnzkkjsvbjqu9qkp8eba^9n0q7pwxt32eoqratsac2tub92ihb2side4y71gva808wrejkq7x8q37jd5z6ne^3lzqfq8hda6spoyintomn75mld4wf7q4qqkltt5qglj5z6jnrf8hekmagn84sjhf^54zlgaeum0u79v6w9n080verrf1fei3tih69du4u05x77t0ju34gqf4qhczb5rk2^8bof8ro48lnu546iylbe6601c7l7n7ze1hv7wbcxb5eukdytulgyoigw92kzy3l^ef1loccn9yv3ro6d5ydalmkfvhh75kgcpc6fbqbgv44a6sxb98h8nucumomg0p1^os8mpprt6xpii2rk1j4qqz9si5nuh1n7sdq7ghua2ok68xu8fhy45eaqlurfg69^2g17kt7r5e8hcnrl5romufjnzlsfxnpgyfqsx9vaf1cwxu6zzaals1ib10pu2k27^128^8htlqitgg0z7rirs01lelq50sf43g114gm61rzvgcuqsi6ynf1bdamk45bkc4qu^1wn1h96m8skcmmq5s3rk3ppx6xl8ju0epv3wzgt56xhonerjd9lv7ze7mex4r2fj^276u8nnzoensae85cret3ee7zmaql4lbfqobl3i0mj8cyhrtej948zkpstr1s98f^e3ystjxvk3trhgjkihhnleq4med3163arourotx2ifublyl0d4e3or9wa0xmckn^3i5rrh7vf68uei90a8iegilshbyjfkjk6co6h8iwz5fr6uf9zkn4w5zg8qqnb828^p1er45turd28b4pa07l88af1wphn7a3b9ua99b3afl7mq1jmngiykf2dn6qz37f^15tppubdtblz9kwntk8jcf6jnefmcq8ak30mz0daqnqtd8swbkuhgg764nr3kjpt^cyh9rrcpz2ffwip2a8gg0rjwr0yjvlob8c8onibkx9yh86d1xesafragkvpn498^89p4pd3eb0k5om0ndx1u511ur0sxs24n5yknw6v7znytcoxurwq0hf5tas5fd3c^17hgfeazb2kxj8y98rdegf2dr4fkujxolq0g1sxodyd3ohj9apkeogjns5xbc9hb^3ekn1sqmy157x5ohuq9ffauoa8duvoa5py3nwmku2xh8awjxs20jli13kptgagjp^61soals07t0hs3m7ewjzgbla7zsmi9ejhcq7cd5c0s3no80fxh2ubxi5ozjo8teu^5sxkyaxfizvm3ncp52f5hj8x6h1duhotyhli9ndibndjgltgytm35bih583xn54l^2zyvm5ksmyp0e7o92beafwdi6hvgu6fd1bjrlfjazoy7ki3yda7mweejd012strb^dlgimglb2moj09uy9m3dbrw0pcvmx5p198sqh85n6wxglzaw6ksb1x2r3tpajw4^169cvea7gt4f5zs8s8cnxdvpq151uzr6nz12ol2ed6urlogc351gkv78sbg8hp90^2opl4ge8my9h73jmoz86zy5crxowzs4jqy0ndcwixn33zh2tx7ma4rhewdc8qv5z^1v8xlfk4bhtc0s9mslqopf9v29yb2ma2vrl12vxq0fggp86cu3erc52dwvyzlorl^2txp8tfyhh1dg5u4yoikxpnhrm9dunj2fikqmnib2bf7u4nlz5kq4k22r3lieytv^8g0zdjth5b7tmv7kn52zdeuq6y0rzyy7khd7dh78q551b31vpio6t7yxonl7ina^46yfaaaujhzexhd2l0rhqnth7pl4dvyg7n2wf7c54hwb62ci8z68a0pdlr1pnir4^5yscu9uxf525bhgpfv1py46jdr5np5ighe5rhktzm1eg8t3ykbw5jwmuawh5hg8^3l8ma08y5oq5x43efl148xjeld2nc4dhu1s4fi99f057uhs5qo1s64zoszbv4aex^296l6rya191jd9rcyd0h681wuijewtecvkor9vr8vqhh240tao7f31thheoaoxsc^haw5m23ohy8iznbw68wnoqan2nohl5hng89v2l8o5xgm5l2dcbhjy9yct7q25ep^2n8cpxqc6fofora16kmod1izpu0zmlrp47ptx2q549qfzmykrkynslau5fs43x17^3potvir73j4o0dnq1l8xv54dq1k0ibhjip6xqdy9qc7l21i8eldrda2xrhscrlm^syyr06ighz8zr6du62ykvw2w6pxx9c0ljmz0ms8s4qcdf7iole5yp50nknews54^ayr4sluv3qs41w18et0zsnve3bs2b47n9kyodd2vdh1tgoq3ll979m7izqa22it^2kb99b92mpaw20c0e0v5dm7c9s6f1fjt1egkkpcxzwuxj9j198zjc5owl4pwfpbn^5nrevtdw2q4ywwe23yoin4ae1l4y5b44ue89dkwuakpbdjtj1dxt6ce7v0s976v^3rnf51qr0rsv0tvv1it2ee5vdgkufd2xcr27spm0mbfs2k7b9nb3shsmifkje0xa^3v34fe2yv32caytgupr40uemb3fjkk56uxbhmpwnyr5p8a4lwyarov1z814bmoff^3j48ixji20km9szdq937u7p7xbi4u4w09flpvar2owo4m7we81y1gj5ek203wqrr^eozp84hbth365kuul2qfhauzt1xy2ti9k4hgbqbx6f3p1q4m8t17sq5fpf0m22k^1caioowucq4iisb2czykn5v7xnnpb95w251yd1jbbui4ab5gl12d1covgdonlk55^3pe85iqjs99plj0e3fuy9q0mtpszdbhosyhcutr8ep0e3e2xdlvp02dyle7n9nvm^1fy2azdtd28h6gr6vdwdyah0jz3z796cn5o5uk6imnjwga0331rwhuoozugqxbze^eg6bc5nrt2w29yyzw9uhggtvi4a1oar3lmlu7kjnus2cjl73axdj9t3a24vlyhi^ku6s0br2ee6b1cf61b9ytslgkqw0uhybzf0ithgikf76m4k0dvje5wqni9wachg^28w3ed25mosl8q7evrxyhmkdz8kdwayvjlu9uo4i5bdap1dmiew8lv37a0is5irh^3v20xk9ans453xswalf5oue15gurmlcf9q3c1x1uapgktq6o0f5w7mbwr8blxuts^1uv90dektxz2by8488j98q5kfltktayd1o1qycvrc1fztysbofrylox4fgg8crey^3ane4gziehwmgj9ba3kn2v7itasdl3duj5m3ndk07okf7f8yy76aes8jtkgh970r^2j1t06w4zeqnizr8rkf526rnxdsyxo559disuhfriqa27amlfl5pp01bmrtdwvta^27c8dkilpp3kvq5inwgpn1zouo05osphjy9f1cj4tb50v5gn5bi3jzyvwydf8sj1^pbyko9jt0uqt3wyklsfbje0aglwcf01skukwwrr8z2ee0dhfe40wxocz8wf7uk2^15vyqtc1h2t94no5tqfack9ba03eeorebc3s7me44xccg3mhawnfx61ja8kf9gyl^x0upo2133bs5hs7cashsg7su8665y95bvvaw2s6neggn789thl9u4xbajd1o77n^27tw5v73wnb48yif04bu47rau7twvme0jzkp4uuxvohuz1aw5yl3hvs38p09yr6k^8cvea8qkps5inxmz19nr8ajftw4yhj7cuju6d111o3bobjpyhym5931dp3uyh1m^6wxu8uhug5j8p06asvafebvxujtgz92i70ivuzo33bg5s4jp1dqafwz3pfsnwx^1oy9el50fmn58bd14cvbrd3s7w3lz2sjid3yuarca0gpbidjhjhgaxvme07lf5ev^1ht1hbu46zebtrdg55pxal6va6o78a6av5rvfny405is1xn8icdracxkb4mg468o^2z50vm1rv49uq8bhf6fdos2jy901rngygo139hcrx61wnxxi2ivrhqkjtxysfjr2^2zynj82wiaee9z6cpbzt41lwddr574v7oevyntld351iyz3v1lg04u0x2hyz5tvx^1nn1zmigki6218tg2e35ze9vrr0fiz9xvnk0qoqa0ajp7yca6ifrm79d84nhpxxx^4uph0tvhri9a23hqnioq65nw67ox6ah9cb4y8548swqfoibe8g8e2rhehahrzdgo^30kibqp9rcbkqq6kisotsgq5rj97l5ioixa47f15x7ury8rfobm4xy9ze6suyrxi^3lqh9fyt1oktupu3tc3aairgqi75v4zaf7msyczruxwfmsa232lv0cvcpmgt3odi^xdwqv44oz92bc6r338wchqiaxsobh187mdos9ftg6ezi1o1jdfqwyw6s7j43u2l^2n8k7a8fhowrkjlhrbspbrmgqt6jjsxjmiwmsxbjfbbxdaf0fx4w4op7c5fx90qn^32zwevkou4ixl58wsuvw1hok5jvj43um4xu9vh0dg5oa4o4lge2kxq9f882jfgnh^y0c284ufs4sal58ng30h59ixrdcznfxhdxl1egielgq33owc76y54gapllodi58^147cpsw50qsbe43ol4zgavz69ppgqd2wmct20a4rq8o8wclnuh4afmeszgxj41jr^1vz14zj9732t7ox9fzu8wxe5h2i1xrnnhosi9bknowbalbk0uuomyhfkdyehz62q^k72824rk7dwlbsg90nonxkml9d4hrxsd7zegi373ee9rt2fssloqplkltn8s3oc^21z4n8tw6qbjwmsaps3tkvhl24h05zhvoqyu82cmwy6aczw0tr20bld49nl2un09^40f29tp50g823sk6ohccglyb7th1rkv9km8ba2oczjse6x2gr1vj90d9yehw8exc^1cj6zfihoe3lk9ihlvns8k3crfvepy9oro9ff1ogcbnfwex3s85hzhwtprgsr7qi^184df7o4i9dfk34xuydmyo0w22zizg2ru049rcricveirmmngtd3hx2jvgxxqjvf^211xat3hk07jc2la7wsezenambino9qcd3ewv90zxi0w3hs1oobmlsz5ins5uxu8^1entp4flee9ya6bf80sbce6rdwbyhlr3l9f9z0qxwo2dqb0i1bfc0nt9go9v27qr^ex3gv36gxmxsqlehnfpuz54rvhjafekp811clp39scuknhqyaoou2z5vdeivquv^5y7ef1i3chxid3440lb7sj5qkxxssdhd6ymhamd9ihtwuh8rh0lsp9kd8cmel7qf^2tuh5pu1itqa4d8tcgl3xp5fbs5p4xekh2em7ce5lgoyo16ncvx3ju5hbz95qrtg^3qfy4tffefnm82mhi70cpq848f88tbkpndq79wgtq3yfmvmxjmp5ty8veg8zs3ok^3a9s9kqgtgz6058w985f6wxzcia4k32zvylspxl5upvavq9qgd5x2xsogaxuwq7^1wsgwcqnznl8h403hjffymlt4jpeo9lif79hslfudajsl2f6k6cqx9lrxdjz3u75^25xb7ogutq82i6aethoxv62gyxppnvcy2amqbg6ubsgw4i1bg59euv9758ifahkc^yj9luhoagbelwa2sy6k0a8mkfg72k0028cmoxmx5g867q47gy4sikcdnxyuouek^4iwmfukrulotevpybv4vw3nlz6rs1xvrdspi1g036ur1hxautpyg2nr75k5wg5no^38scuaqv87a00iz5fedtqn3qkhocsrv34r6mzerhrq6768upxtd8pe1dtzplrq3x^1njuflq1k8wvcsmik1spaapj3zyky46vjgp6ghkvbkuhnqiqmjlvwtoxq1xlxlav^2egz6pzw6tiyown8st2hj075jo168ilae3onnlz0cegsns1tmegqmyybno5gnmsh^nk8ldmozn6xcr3q1scjpdlyuha862mctn9i2slu8rrgodxfe7ctl5csg47o39yj^3b6sble3zxqz85k2g4ty6v8728d13hl4kub0oun7nblx823vq5d9fy2somsilpek^103jhu7dbo9i2u2wtv7zr79gtytze4d2ftuig1dz7isrpjedimunxen2v21g00ga^5f57g4etr8ojvo2ryd4mlp60tyv3salpy2hnctyj2o0kbn97cz7y0wi3a9zh3emu^775qi955wh2h2b01il90xv8wrn42rtssu0cthbeogx3btdjxzvwg8ikmcjelhl7^r02xxz239ypqopv1r8xwzj0msr8nulws1t0e18bg2hyttvlboe7zh7hzzhh3z14^3t052a06iynz0zx20egek1t68x8mhf9rcinaonj3gl5r9upf3qo2mrr41321zez2^y0q9lkygmlj3bs156fciqtww95wgfmmeiyzv7t3kgnwst3m29a9o0eyk8rhhpo6^28qz0t4p1nqp9bzbfxszhuh7kjn23nufskxl6gjasfwqp4o0dzj1cwsvurkjhy25^2zo99ihkl39k4jnaireldwz31fkjafdz8dq4bwikvit7qad3it9gnhwzzq1ay7qu^4afxdpto6hnoc9qhypghrxmjoqmjv4wim9fbjfs11zgbik2ihajh7ilzuwe6m44a^2jtj9a8i2s75vsl5oijc1u1vrnf102qi37nzmyoimcbbql1dvsnv6lemh7ct6ht1^2ikqcw69q7kbzt3u0forbhw3oz92tfsjeiuog0jxncavi2b3rrkjwhll3ao8wosp^108u3lo3pbix7nlpl3yyz8fy7rnux37qg5hehidx3uxm9qgkg49p5ep1716x4ymb^3m2bnqt73h9sebswr2ewb3amsw9w8c89hu7cr9e5wk40pjczm895ivn0yg9uggcg^2nimim5fe3g61m5rhgoaf2obolidwb4iviyssd998wak446v8u7ptm4sj3lsacmm^lh129vmn70ehqdeyfe1gzffj4n5l6b6nxxtuqjxezew7d1g5tgobu3toq941488^56sudqg2jkwj1cfpwelz291mlfd4ny8xkclpf00iv2gdq30w1oiaq240don7twyk^2akm0woor6zx90q3bi5fy44h3curm212gmfsi0q262lds860bzirtx0q4wzqua3c^3f26o6ggcujsbvwum8bg014sxsol9q7yvu9g1zidrs3a45i9s1h5y8uzf79ysc5w^1cwovggexqej7oguq73nl3hqqlwcuqw40eulmzkdfp02xdoevxk4lcwfm31ytg3o^1kv34a8y5y7d03nb61511o49ne6pvu1kmcqjpo73xgiq5v2jm5jg6jmmuoqo9stb^5cbvbuavc2rwsuwufpiioiglzuty9xoja2femx5yxwo7ryvkfrqa5wevyxx5e9ft^3fr3uwlh59vu2gcnj0xuqbeli9nb872x4j2scpnqutk3fsad4lyjb41r74fhqiq7^230nu42h8ju7mzpmk9yek1dkaw8o6t3q7czntoo4bzsak0trt5s8g48dda033yqr^1vfw5ldno2ti8j81u583kqbwym38igbphsca3bmemxrylllddm3b9k0xwsqfeut4^5krxcyge76yw5qcucwmhy8o7hoqg5wazcbmr8zymqnlukrge0o21mejxkernhgs^2v5tv1wy25on5nfnbhb4i7mtmh7z1g2f67gas86gx0gnfuga7re7b602obu3kdgt^61jrkutlaycm97qw88rp3iejx65u3z5sjcmaxd8jxh6esship0dj0qsmm1u8xlqg^4mwpyy7sjntqhiuv76jmaigt3dzkc6voaxpljp7mcsjfydd8boe3oyceba972fz7^a5cc6i673zieyrngtsgqiclfu1zp384vk6mvxwb4vqp7yq5dabmrj4fg3utetng^1nm2362l6gnmvkfcagrfi7h3qwqyk1jeye716yn8a6sg6z041rm5az5n46y8cd11^1b1xxxuqv438o2c6ydrabtpwc9oichhi75ymd2jk08t2ljpro8bvzkkp41yy3m79^2ephnjxttcpppbpg4nxdp60ponxifk0h2ijlxi2mawdn6tyzze9lohdm02jnqwqt^1oahl5fohz4q0nvhwhuw9hqddcbsof4e7si7b2g3i6e9biib45n5coo227mm42kj^u0llgqi3zqdcpouqlhtmgs3lmdj0piwvwv4zqc13c7b1u0ydnj4vp0l35z0t3k2^4xs9zg3jvqvnmrmqqsq4rl0i5hgk6plj388yx1m2vlfi4mppxq6h5lv79zk39gqp^b50rl9rj29huuxhvc3qs7fjnuc9t4tqo254bpfylif16dcy5x9ydzbq3kl2hi2w^1rhu94gst0fexjkrjlragnxnbpjm0my6avdf682iw2akutdxje50qs46naqs0pda^12fbjhheqqu5yrwmf7g6jnypp29julf2mf5zgwobhktzqv3ly3r63c31w2928qvv^34uz242mysluh19cp3in5iz6ijx0dvqron0zm0gmxrpjnrchmg209w32bng8xhr0^2zh7brkbbrbies80u5f64swpt5yqqvuthuu0sbri4bary86cghhb22fvxb6hy7sb^2y65znlf0cksv31jkb58we58qqzdmeesr7xhqj5vmhc6eulkvyjndxws27k5lsqe^";
        String sig = "sig|ID8^sqhhd3h6|5fqqk43zx53t31aarojvgkdgxllikpym5j8axr2tlifekf1dz5tl6esksqhhd3h6|";

        BigInteger _q = new BigInteger(q, SchindelhauerTMCG.TMCG_MPZ_IO_BASE);
        BigInteger _p = new BigInteger(p, SchindelhauerTMCG.TMCG_MPZ_IO_BASE);
        BigInteger _m = new BigInteger(m, SchindelhauerTMCG.TMCG_MPZ_IO_BASE);
        BigInteger __m = _p.multiply(_q);
//        assert _m.equals(__m);

        TMCGSecretKey secretKey = new TMCGSecretKey("Name", "a@a.com", 328, true, _p, _q);

    }

    @Test
    public void decrypt_pereparedData_returnDecodeData() throws Exception {
        String out = "p:3goxk90rjd16gbgipzh8gba9jyt3l1b4nhxcibvm6fylwmldct04z2rzy0f1oq86nnpv6vn3nen\n" +
                "q:58qsjjf29y1tjetc8zq9qpgz0ulc2ug7s8ld38z3di9o4ug3tuqg9p659muj0r51djced4ubmpn\n" +
                "encrypted:enc|ID8^ava6y1sg|42qkusg6l7f4boz5i9yx7qkm59sog4xhjg82fxl9r9cu3tqs6zg3ctlnwdckc2ayc3zehabxpm9zk5ijgs0zy7y8a9q0fyc58gr8z2546npcnuqe4ih5xn65nwl5g305fexxd70nt5ghg83d0huar|\n";
        String outByLine[] = out.split("\n");

        BigInteger p = new BigInteger(outByLine[0].substring(2), SchindelhauerTMCG.TMCG_MPZ_IO_BASE);
        BigInteger q = new BigInteger(outByLine[1].substring(2), SchindelhauerTMCG.TMCG_MPZ_IO_BASE);
        TMCGSecretKey secretKey = new TMCGSecretKey("Name", "a@a.com", 768, true, p, q);

        byte[] expected = { 49, 50, 50, 51, 51, 51, 52, 52, 52, 52, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54 };
        byte[] decripted = secretKey.decrypt(outByLine[2].substring(10));
        assertArrayEquals(expected, decripted);
    }
}

